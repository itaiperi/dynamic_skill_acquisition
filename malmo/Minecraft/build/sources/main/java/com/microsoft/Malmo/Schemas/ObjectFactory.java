//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.05.03 at 11:48:15 AM IDT 
//


package com.microsoft.Malmo.Schemas;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.microsoft.Malmo.Schemas package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _DrawSphere_QNAME = new QName("http://ProjectMalmo.microsoft.com", "DrawSphere");
    private final static QName _InventoryItem_QNAME = new QName("http://ProjectMalmo.microsoft.com", "InventoryItem");
    private final static QName _InventoryBlock_QNAME = new QName("http://ProjectMalmo.microsoft.com", "InventoryBlock");
    private final static QName _Weather_QNAME = new QName("http://ProjectMalmo.microsoft.com", "Weather");
    private final static QName _DrawEntity_QNAME = new QName("http://ProjectMalmo.microsoft.com", "DrawEntity");
    private final static QName _InventoryObject_QNAME = new QName("http://ProjectMalmo.microsoft.com", "InventoryObject");
    private final static QName _DrawLine_QNAME = new QName("http://ProjectMalmo.microsoft.com", "DrawLine");
    private final static QName _DrawObjectType_QNAME = new QName("http://ProjectMalmo.microsoft.com", "DrawObjectType");
    private final static QName _StartTime_QNAME = new QName("http://ProjectMalmo.microsoft.com", "StartTime");
    private final static QName _DrawCuboid_QNAME = new QName("http://ProjectMalmo.microsoft.com", "DrawCuboid");
    private final static QName _DrawItem_QNAME = new QName("http://ProjectMalmo.microsoft.com", "DrawItem");
    private final static QName _DrawBlock_QNAME = new QName("http://ProjectMalmo.microsoft.com", "DrawBlock");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.microsoft.Malmo.Schemas
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link MazeDecorator }
     * 
     */
    public MazeDecorator createMazeDecorator() {
        return new MazeDecorator();
    }

    /**
     * Create an instance of {@link AnimationDecorator }
     * 
     */
    public AnimationDecorator createAnimationDecorator() {
        return new AnimationDecorator();
    }

    /**
     * Create an instance of {@link ContinuousMovementCommands }
     * 
     */
    public ContinuousMovementCommands createContinuousMovementCommands() {
        return new ContinuousMovementCommands();
    }

    /**
     * Create an instance of {@link ChatCommands }
     * 
     */
    public ChatCommands createChatCommands() {
        return new ChatCommands();
    }

    /**
     * Create an instance of {@link SimpleCraftCommands }
     * 
     */
    public SimpleCraftCommands createSimpleCraftCommands() {
        return new SimpleCraftCommands();
    }

    /**
     * Create an instance of {@link ClassroomDecorator }
     * 
     */
    public ClassroomDecorator createClassroomDecorator() {
        return new ClassroomDecorator();
    }

    /**
     * Create an instance of {@link SnakeDecorator }
     * 
     */
    public SnakeDecorator createSnakeDecorator() {
        return new SnakeDecorator();
    }

    /**
     * Create an instance of {@link AgentStart }
     * 
     */
    public AgentStart createAgentStart() {
        return new AgentStart();
    }

    /**
     * Create an instance of {@link VideoProducer }
     * 
     */
    public VideoProducer createVideoProducer() {
        return new VideoProducer();
    }

    /**
     * Create an instance of {@link RewardForStructureCopying }
     * 
     */
    public RewardForStructureCopying createRewardForStructureCopying() {
        return new RewardForStructureCopying();
    }

    /**
     * Create an instance of {@link AbsoluteMovementCommands }
     * 
     */
    public AbsoluteMovementCommands createAbsoluteMovementCommands() {
        return new AbsoluteMovementCommands();
    }

    /**
     * Create an instance of {@link DiscreteMovementCommands }
     * 
     */
    public DiscreteMovementCommands createDiscreteMovementCommands() {
        return new DiscreteMovementCommands();
    }

    /**
     * Create an instance of {@link InventoryCommands }
     * 
     */
    public InventoryCommands createInventoryCommands() {
        return new InventoryCommands();
    }

    /**
     * Create an instance of {@link MissionQuitCommands }
     * 
     */
    public MissionQuitCommands createMissionQuitCommands() {
        return new MissionQuitCommands();
    }

    /**
     * Create an instance of {@link Reward }
     * 
     */
    public Reward createReward() {
        return new Reward();
    }

    /**
     * Create an instance of {@link UnnamedGridDefinition }
     * 
     */
    public UnnamedGridDefinition createUnnamedGridDefinition() {
        return new UnnamedGridDefinition();
    }

    /**
     * Create an instance of {@link ClassroomDecorator.Specification }
     * 
     */
    public ClassroomDecorator.Specification createClassroomDecoratorSpecification() {
        return new ClassroomDecorator.Specification();
    }

    /**
     * Create an instance of {@link InventoryBlock }
     * 
     */
    public InventoryBlock createInventoryBlock() {
        return new InventoryBlock();
    }

    /**
     * Create an instance of {@link InventoryObjectType }
     * 
     */
    public InventoryObjectType createInventoryObjectType() {
        return new InventoryObjectType();
    }

    /**
     * Create an instance of {@link DrawSphere }
     * 
     */
    public DrawSphere createDrawSphere() {
        return new DrawSphere();
    }

    /**
     * Create an instance of {@link DrawObjectType }
     * 
     */
    public DrawObjectType createDrawObjectType() {
        return new DrawObjectType();
    }

    /**
     * Create an instance of {@link AgentQuitFromCollectingItem }
     * 
     */
    public AgentQuitFromCollectingItem createAgentQuitFromCollectingItem() {
        return new AgentQuitFromCollectingItem();
    }

    /**
     * Create an instance of {@link BlockOrItemSpecWithDescription }
     * 
     */
    public BlockOrItemSpecWithDescription createBlockOrItemSpecWithDescription() {
        return new BlockOrItemSpecWithDescription();
    }

    /**
     * Create an instance of {@link MazeDecorator.SizeAndPosition }
     * 
     */
    public MazeDecorator.SizeAndPosition createMazeDecoratorSizeAndPosition() {
        return new MazeDecorator.SizeAndPosition();
    }

    /**
     * Create an instance of {@link MazeTerminus }
     * 
     */
    public MazeTerminus createMazeTerminus() {
        return new MazeTerminus();
    }

    /**
     * Create an instance of {@link MazeBlock }
     * 
     */
    public MazeBlock createMazeBlock() {
        return new MazeBlock();
    }

    /**
     * Create an instance of {@link MazeDecorator.Waypoints }
     * 
     */
    public MazeDecorator.Waypoints createMazeDecoratorWaypoints() {
        return new MazeDecorator.Waypoints();
    }

    /**
     * Create an instance of {@link MazeDecorator.GapProbability }
     * 
     */
    public MazeDecorator.GapProbability createMazeDecoratorGapProbability() {
        return new MazeDecorator.GapProbability();
    }

    /**
     * Create an instance of {@link MazeDecorator.AddQuitProducer }
     * 
     */
    public MazeDecorator.AddQuitProducer createMazeDecoratorAddQuitProducer() {
        return new MazeDecorator.AddQuitProducer();
    }

    /**
     * Create an instance of {@link MazeDecorator.AddNavigationObservations }
     * 
     */
    public MazeDecorator.AddNavigationObservations createMazeDecoratorAddNavigationObservations() {
        return new MazeDecorator.AddNavigationObservations();
    }

    /**
     * Create an instance of {@link AnimationDecorator.Parametric }
     * 
     */
    public AnimationDecorator.Parametric createAnimationDecoratorParametric() {
        return new AnimationDecorator.Parametric();
    }

    /**
     * Create an instance of {@link AnimationDecorator.Linear }
     * 
     */
    public AnimationDecorator.Linear createAnimationDecoratorLinear() {
        return new AnimationDecorator.Linear();
    }

    /**
     * Create an instance of {@link DrawingDecorator }
     * 
     */
    public DrawingDecorator createDrawingDecorator() {
        return new DrawingDecorator();
    }

    /**
     * Create an instance of {@link MinecraftServerConnection }
     * 
     */
    public MinecraftServerConnection createMinecraftServerConnection() {
        return new MinecraftServerConnection();
    }

    /**
     * Create an instance of {@link ObservationFromRecentCommands }
     * 
     */
    public ObservationFromRecentCommands createObservationFromRecentCommands() {
        return new ObservationFromRecentCommands();
    }

    /**
     * Create an instance of {@link ContinuousMovementCommands.ModifierList }
     * 
     */
    public ContinuousMovementCommands.ModifierList createContinuousMovementCommandsModifierList() {
        return new ContinuousMovementCommands.ModifierList();
    }

    /**
     * Create an instance of {@link ChatCommands.ModifierList }
     * 
     */
    public ChatCommands.ModifierList createChatCommandsModifierList() {
        return new ChatCommands.ModifierList();
    }

    /**
     * Create an instance of {@link ObservationFromDiscreteCell }
     * 
     */
    public ObservationFromDiscreteCell createObservationFromDiscreteCell() {
        return new ObservationFromDiscreteCell();
    }

    /**
     * Create an instance of {@link ObservationFromTurnScheduler }
     * 
     */
    public ObservationFromTurnScheduler createObservationFromTurnScheduler() {
        return new ObservationFromTurnScheduler();
    }

    /**
     * Create an instance of {@link FlatWorldGenerator }
     * 
     */
    public FlatWorldGenerator createFlatWorldGenerator() {
        return new FlatWorldGenerator();
    }

    /**
     * Create an instance of {@link DrawItem }
     * 
     */
    public DrawItem createDrawItem() {
        return new DrawItem();
    }

    /**
     * Create an instance of {@link SimpleCraftCommands.ModifierList }
     * 
     */
    public SimpleCraftCommands.ModifierList createSimpleCraftCommandsModifierList() {
        return new SimpleCraftCommands.ModifierList();
    }

    /**
     * Create an instance of {@link Mission }
     * 
     */
    public Mission createMission() {
        return new Mission();
    }

    /**
     * Create an instance of {@link About }
     * 
     */
    public About createAbout() {
        return new About();
    }

    /**
     * Create an instance of {@link ModSettings }
     * 
     */
    public ModSettings createModSettings() {
        return new ModSettings();
    }

    /**
     * Create an instance of {@link ServerSection }
     * 
     */
    public ServerSection createServerSection() {
        return new ServerSection();
    }

    /**
     * Create an instance of {@link ServerInitialConditions }
     * 
     */
    public ServerInitialConditions createServerInitialConditions() {
        return new ServerInitialConditions();
    }

    /**
     * Create an instance of {@link Time }
     * 
     */
    public Time createTime() {
        return new Time();
    }

    /**
     * Create an instance of {@link ServerHandlers }
     * 
     */
    public ServerHandlers createServerHandlers() {
        return new ServerHandlers();
    }

    /**
     * Create an instance of {@link FileWorldGenerator }
     * 
     */
    public FileWorldGenerator createFileWorldGenerator() {
        return new FileWorldGenerator();
    }

    /**
     * Create an instance of {@link DefaultWorldGenerator }
     * 
     */
    public DefaultWorldGenerator createDefaultWorldGenerator() {
        return new DefaultWorldGenerator();
    }

    /**
     * Create an instance of {@link ClassroomDecorator.Complexity }
     * 
     */
    public ClassroomDecorator.Complexity createClassroomDecoratorComplexity() {
        return new ClassroomDecorator.Complexity();
    }

    /**
     * Create an instance of {@link SnakeBlock }
     * 
     */
    public SnakeBlock createSnakeBlock() {
        return new SnakeBlock();
    }

    /**
     * Create an instance of {@link SnakeDecorator.GapProbability }
     * 
     */
    public SnakeDecorator.GapProbability createSnakeDecoratorGapProbability() {
        return new SnakeDecorator.GapProbability();
    }

    /**
     * Create an instance of {@link SnakeDecorator.StairsProbability }
     * 
     */
    public SnakeDecorator.StairsProbability createSnakeDecoratorStairsProbability() {
        return new SnakeDecorator.StairsProbability();
    }

    /**
     * Create an instance of {@link SnakeDecorator.TurnProbability }
     * 
     */
    public SnakeDecorator.TurnProbability createSnakeDecoratorTurnProbability() {
        return new SnakeDecorator.TurnProbability();
    }

    /**
     * Create an instance of {@link SnakeDecorator.SizeAndPosition }
     * 
     */
    public SnakeDecorator.SizeAndPosition createSnakeDecoratorSizeAndPosition() {
        return new SnakeDecorator.SizeAndPosition();
    }

    /**
     * Create an instance of {@link MovingTargetDecorator }
     * 
     */
    public MovingTargetDecorator createMovingTargetDecorator() {
        return new MovingTargetDecorator();
    }

    /**
     * Create an instance of {@link Pos }
     * 
     */
    public Pos createPos() {
        return new Pos();
    }

    /**
     * Create an instance of {@link BlockSpec }
     * 
     */
    public BlockSpec createBlockSpec() {
        return new BlockSpec();
    }

    /**
     * Create an instance of {@link DrawBlockBasedObjectType }
     * 
     */
    public DrawBlockBasedObjectType createDrawBlockBasedObjectType() {
        return new DrawBlockBasedObjectType();
    }

    /**
     * Create an instance of {@link BuildBattleDecorator }
     * 
     */
    public BuildBattleDecorator createBuildBattleDecorator() {
        return new BuildBattleDecorator();
    }

    /**
     * Create an instance of {@link ServerQuitFromTimeUp }
     * 
     */
    public ServerQuitFromTimeUp createServerQuitFromTimeUp() {
        return new ServerQuitFromTimeUp();
    }

    /**
     * Create an instance of {@link ServerQuitWhenAnyAgentFinishes }
     * 
     */
    public ServerQuitWhenAnyAgentFinishes createServerQuitWhenAnyAgentFinishes() {
        return new ServerQuitWhenAnyAgentFinishes();
    }

    /**
     * Create an instance of {@link AgentSection }
     * 
     */
    public AgentSection createAgentSection() {
        return new AgentSection();
    }

    /**
     * Create an instance of {@link PosAndDirection }
     * 
     */
    public PosAndDirection createPosAndDirection() {
        return new PosAndDirection();
    }

    /**
     * Create an instance of {@link AgentStart.Inventory }
     * 
     */
    public AgentStart.Inventory createAgentStartInventory() {
        return new AgentStart.Inventory();
    }

    /**
     * Create an instance of {@link AgentHandlers }
     * 
     */
    public AgentHandlers createAgentHandlers() {
        return new AgentHandlers();
    }

    /**
     * Create an instance of {@link ObservationFromHotBar }
     * 
     */
    public ObservationFromHotBar createObservationFromHotBar() {
        return new ObservationFromHotBar();
    }

    /**
     * Create an instance of {@link ObservationFromFullStats }
     * 
     */
    public ObservationFromFullStats createObservationFromFullStats() {
        return new ObservationFromFullStats();
    }

    /**
     * Create an instance of {@link ObservationFromFullInventory }
     * 
     */
    public ObservationFromFullInventory createObservationFromFullInventory() {
        return new ObservationFromFullInventory();
    }

    /**
     * Create an instance of {@link ObservationFromSubgoalPositionList }
     * 
     */
    public ObservationFromSubgoalPositionList createObservationFromSubgoalPositionList() {
        return new ObservationFromSubgoalPositionList();
    }

    /**
     * Create an instance of {@link PointWithToleranceAndDescription }
     * 
     */
    public PointWithToleranceAndDescription createPointWithToleranceAndDescription() {
        return new PointWithToleranceAndDescription();
    }

    /**
     * Create an instance of {@link ObservationFromGrid }
     * 
     */
    public ObservationFromGrid createObservationFromGrid() {
        return new ObservationFromGrid();
    }

    /**
     * Create an instance of {@link GridDefinition }
     * 
     */
    public GridDefinition createGridDefinition() {
        return new GridDefinition();
    }

    /**
     * Create an instance of {@link ObservationFromDistance }
     * 
     */
    public ObservationFromDistance createObservationFromDistance() {
        return new ObservationFromDistance();
    }

    /**
     * Create an instance of {@link NamedPoint }
     * 
     */
    public NamedPoint createNamedPoint() {
        return new NamedPoint();
    }

    /**
     * Create an instance of {@link ObservationFromChat }
     * 
     */
    public ObservationFromChat createObservationFromChat() {
        return new ObservationFromChat();
    }

    /**
     * Create an instance of {@link ObservationFromNearbyEntities }
     * 
     */
    public ObservationFromNearbyEntities createObservationFromNearbyEntities() {
        return new ObservationFromNearbyEntities();
    }

    /**
     * Create an instance of {@link RangeDefinition }
     * 
     */
    public RangeDefinition createRangeDefinition() {
        return new RangeDefinition();
    }

    /**
     * Create an instance of {@link ObservationFromRay }
     * 
     */
    public ObservationFromRay createObservationFromRay() {
        return new ObservationFromRay();
    }

    /**
     * Create an instance of {@link VideoProducer.DepthScaling }
     * 
     */
    public VideoProducer.DepthScaling createVideoProducerDepthScaling() {
        return new VideoProducer.DepthScaling();
    }

    /**
     * Create an instance of {@link RewardForTouchingBlockType }
     * 
     */
    public RewardForTouchingBlockType createRewardForTouchingBlockType() {
        return new RewardForTouchingBlockType();
    }

    /**
     * Create an instance of {@link BlockSpecWithRewardAndBehaviour }
     * 
     */
    public BlockSpecWithRewardAndBehaviour createBlockSpecWithRewardAndBehaviour() {
        return new BlockSpecWithRewardAndBehaviour();
    }

    /**
     * Create an instance of {@link RewardForSendingCommand }
     * 
     */
    public RewardForSendingCommand createRewardForSendingCommand() {
        return new RewardForSendingCommand();
    }

    /**
     * Create an instance of {@link RewardForSendingMatchingChatMessage }
     * 
     */
    public RewardForSendingMatchingChatMessage createRewardForSendingMatchingChatMessage() {
        return new RewardForSendingMatchingChatMessage();
    }

    /**
     * Create an instance of {@link ChatMatchSpec }
     * 
     */
    public ChatMatchSpec createChatMatchSpec() {
        return new ChatMatchSpec();
    }

    /**
     * Create an instance of {@link RewardForCollectingItem }
     * 
     */
    public RewardForCollectingItem createRewardForCollectingItem() {
        return new RewardForCollectingItem();
    }

    /**
     * Create an instance of {@link BlockOrItemSpecWithReward }
     * 
     */
    public BlockOrItemSpecWithReward createBlockOrItemSpecWithReward() {
        return new BlockOrItemSpecWithReward();
    }

    /**
     * Create an instance of {@link RewardForDiscardingItem }
     * 
     */
    public RewardForDiscardingItem createRewardForDiscardingItem() {
        return new RewardForDiscardingItem();
    }

    /**
     * Create an instance of {@link RewardForReachingPosition }
     * 
     */
    public RewardForReachingPosition createRewardForReachingPosition() {
        return new RewardForReachingPosition();
    }

    /**
     * Create an instance of {@link PointWithReward }
     * 
     */
    public PointWithReward createPointWithReward() {
        return new PointWithReward();
    }

    /**
     * Create an instance of {@link RewardForMissionEnd }
     * 
     */
    public RewardForMissionEnd createRewardForMissionEnd() {
        return new RewardForMissionEnd();
    }

    /**
     * Create an instance of {@link MissionEndRewardCase }
     * 
     */
    public MissionEndRewardCase createMissionEndRewardCase() {
        return new MissionEndRewardCase();
    }

    /**
     * Create an instance of {@link RewardForStructureCopying.AddQuitProducer }
     * 
     */
    public RewardForStructureCopying.AddQuitProducer createRewardForStructureCopyingAddQuitProducer() {
        return new RewardForStructureCopying.AddQuitProducer();
    }

    /**
     * Create an instance of {@link RewardForTimeTaken }
     * 
     */
    public RewardForTimeTaken createRewardForTimeTaken() {
        return new RewardForTimeTaken();
    }

    /**
     * Create an instance of {@link RewardForCatchingMob }
     * 
     */
    public RewardForCatchingMob createRewardForCatchingMob() {
        return new RewardForCatchingMob();
    }

    /**
     * Create an instance of {@link MobWithDescriptionAndReward }
     * 
     */
    public MobWithDescriptionAndReward createMobWithDescriptionAndReward() {
        return new MobWithDescriptionAndReward();
    }

    /**
     * Create an instance of {@link AbsoluteMovementCommands.ModifierList }
     * 
     */
    public AbsoluteMovementCommands.ModifierList createAbsoluteMovementCommandsModifierList() {
        return new AbsoluteMovementCommands.ModifierList();
    }

    /**
     * Create an instance of {@link DiscreteMovementCommands.ModifierList }
     * 
     */
    public DiscreteMovementCommands.ModifierList createDiscreteMovementCommandsModifierList() {
        return new DiscreteMovementCommands.ModifierList();
    }

    /**
     * Create an instance of {@link InventoryCommands.ModifierList }
     * 
     */
    public InventoryCommands.ModifierList createInventoryCommandsModifierList() {
        return new InventoryCommands.ModifierList();
    }

    /**
     * Create an instance of {@link MissionQuitCommands.ModifierList }
     * 
     */
    public MissionQuitCommands.ModifierList createMissionQuitCommandsModifierList() {
        return new MissionQuitCommands.ModifierList();
    }

    /**
     * Create an instance of {@link TurnBasedCommands }
     * 
     */
    public TurnBasedCommands createTurnBasedCommands() {
        return new TurnBasedCommands();
    }

    /**
     * Create an instance of {@link AgentQuitFromTimeUp }
     * 
     */
    public AgentQuitFromTimeUp createAgentQuitFromTimeUp() {
        return new AgentQuitFromTimeUp();
    }

    /**
     * Create an instance of {@link AgentQuitFromReachingPosition }
     * 
     */
    public AgentQuitFromReachingPosition createAgentQuitFromReachingPosition() {
        return new AgentQuitFromReachingPosition();
    }

    /**
     * Create an instance of {@link AgentQuitFromTouchingBlockType }
     * 
     */
    public AgentQuitFromTouchingBlockType createAgentQuitFromTouchingBlockType() {
        return new AgentQuitFromTouchingBlockType();
    }

    /**
     * Create an instance of {@link BlockSpecWithDescription }
     * 
     */
    public BlockSpecWithDescription createBlockSpecWithDescription() {
        return new BlockSpecWithDescription();
    }

    /**
     * Create an instance of {@link AgentQuitFromReachingCommandQuota }
     * 
     */
    public AgentQuitFromReachingCommandQuota createAgentQuitFromReachingCommandQuota() {
        return new AgentQuitFromReachingCommandQuota();
    }

    /**
     * Create an instance of {@link CommandQuota }
     * 
     */
    public CommandQuota createCommandQuota() {
        return new CommandQuota();
    }

    /**
     * Create an instance of {@link AgentQuitFromCatchingMob }
     * 
     */
    public AgentQuitFromCatchingMob createAgentQuitFromCatchingMob() {
        return new AgentQuitFromCatchingMob();
    }

    /**
     * Create an instance of {@link MobWithDescription }
     * 
     */
    public MobWithDescription createMobWithDescription() {
        return new MobWithDescription();
    }

    /**
     * Create an instance of {@link DrawBlock }
     * 
     */
    public DrawBlock createDrawBlock() {
        return new DrawBlock();
    }

    /**
     * Create an instance of {@link DrawEntity }
     * 
     */
    public DrawEntity createDrawEntity() {
        return new DrawEntity();
    }

    /**
     * Create an instance of {@link InventoryItem }
     * 
     */
    public InventoryItem createInventoryItem() {
        return new InventoryItem();
    }

    /**
     * Create an instance of {@link MissionInit }
     * 
     */
    public MissionInit createMissionInit() {
        return new MissionInit();
    }

    /**
     * Create an instance of {@link ClientAgentConnection }
     * 
     */
    public ClientAgentConnection createClientAgentConnection() {
        return new ClientAgentConnection();
    }

    /**
     * Create an instance of {@link DrawCuboid }
     * 
     */
    public DrawCuboid createDrawCuboid() {
        return new DrawCuboid();
    }

    /**
     * Create an instance of {@link DrawLine }
     * 
     */
    public DrawLine createDrawLine() {
        return new DrawLine();
    }

    /**
     * Create an instance of {@link MissionEnded }
     * 
     */
    public MissionEnded createMissionEnded() {
        return new MissionEnded();
    }

    /**
     * Create an instance of {@link Reward.Value }
     * 
     */
    public Reward.Value createRewardValue() {
        return new Reward.Value();
    }

    /**
     * Create an instance of {@link ItemSpec }
     * 
     */
    public ItemSpec createItemSpec() {
        return new ItemSpec();
    }

    /**
     * Create an instance of {@link SpawnableTypes }
     * 
     */
    public SpawnableTypes createSpawnableTypes() {
        return new SpawnableTypes();
    }

    /**
     * Create an instance of {@link VerticalObstacles }
     * 
     */
    public VerticalObstacles createVerticalObstacles() {
        return new VerticalObstacles();
    }

    /**
     * Create an instance of {@link Variation }
     * 
     */
    public Variation createVariation() {
        return new Variation();
    }

    /**
     * Create an instance of {@link BlockOrItemSpec }
     * 
     */
    public BlockOrItemSpec createBlockOrItemSpec() {
        return new BlockOrItemSpec();
    }

    /**
     * Create an instance of {@link HorizontalObstacles }
     * 
     */
    public HorizontalObstacles createHorizontalObstacles() {
        return new HorizontalObstacles();
    }

    /**
     * Create an instance of {@link CommandListModifier }
     * 
     */
    public CommandListModifier createCommandListModifier() {
        return new CommandListModifier();
    }

    /**
     * Create an instance of {@link UnnamedGridDefinition.Min }
     * 
     */
    public UnnamedGridDefinition.Min createUnnamedGridDefinitionMin() {
        return new UnnamedGridDefinition.Min();
    }

    /**
     * Create an instance of {@link UnnamedGridDefinition.Max }
     * 
     */
    public UnnamedGridDefinition.Max createUnnamedGridDefinitionMax() {
        return new UnnamedGridDefinition.Max();
    }

    /**
     * Create an instance of {@link ClassroomDecorator.Specification.Divisions }
     * 
     */
    public ClassroomDecorator.Specification.Divisions createClassroomDecoratorSpecificationDivisions() {
        return new ClassroomDecorator.Specification.Divisions();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DrawSphere }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ProjectMalmo.microsoft.com", name = "DrawSphere", substitutionHeadNamespace = "http://ProjectMalmo.microsoft.com", substitutionHeadName = "DrawObjectType")
    public JAXBElement<DrawSphere> createDrawSphere(DrawSphere value) {
        return new JAXBElement<DrawSphere>(_DrawSphere_QNAME, DrawSphere.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InventoryItem }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ProjectMalmo.microsoft.com", name = "InventoryItem", substitutionHeadNamespace = "http://ProjectMalmo.microsoft.com", substitutionHeadName = "InventoryObject")
    public JAXBElement<InventoryItem> createInventoryItem(InventoryItem value) {
        return new JAXBElement<InventoryItem>(_InventoryItem_QNAME, InventoryItem.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InventoryBlock }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ProjectMalmo.microsoft.com", name = "InventoryBlock", substitutionHeadNamespace = "http://ProjectMalmo.microsoft.com", substitutionHeadName = "InventoryObject")
    public JAXBElement<InventoryBlock> createInventoryBlock(InventoryBlock value) {
        return new JAXBElement<InventoryBlock>(_InventoryBlock_QNAME, InventoryBlock.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ProjectMalmo.microsoft.com", name = "Weather", defaultValue = "normal")
    public JAXBElement<String> createWeather(String value) {
        return new JAXBElement<String>(_Weather_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DrawEntity }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ProjectMalmo.microsoft.com", name = "DrawEntity", substitutionHeadNamespace = "http://ProjectMalmo.microsoft.com", substitutionHeadName = "DrawObjectType")
    public JAXBElement<DrawEntity> createDrawEntity(DrawEntity value) {
        return new JAXBElement<DrawEntity>(_DrawEntity_QNAME, DrawEntity.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InventoryObjectType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ProjectMalmo.microsoft.com", name = "InventoryObject")
    public JAXBElement<InventoryObjectType> createInventoryObject(InventoryObjectType value) {
        return new JAXBElement<InventoryObjectType>(_InventoryObject_QNAME, InventoryObjectType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DrawLine }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ProjectMalmo.microsoft.com", name = "DrawLine", substitutionHeadNamespace = "http://ProjectMalmo.microsoft.com", substitutionHeadName = "DrawObjectType")
    public JAXBElement<DrawLine> createDrawLine(DrawLine value) {
        return new JAXBElement<DrawLine>(_DrawLine_QNAME, DrawLine.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DrawObjectType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ProjectMalmo.microsoft.com", name = "DrawObjectType")
    public JAXBElement<DrawObjectType> createDrawObjectType(DrawObjectType value) {
        return new JAXBElement<DrawObjectType>(_DrawObjectType_QNAME, DrawObjectType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ProjectMalmo.microsoft.com", name = "StartTime")
    public JAXBElement<Integer> createStartTime(Integer value) {
        return new JAXBElement<Integer>(_StartTime_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DrawCuboid }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ProjectMalmo.microsoft.com", name = "DrawCuboid", substitutionHeadNamespace = "http://ProjectMalmo.microsoft.com", substitutionHeadName = "DrawObjectType")
    public JAXBElement<DrawCuboid> createDrawCuboid(DrawCuboid value) {
        return new JAXBElement<DrawCuboid>(_DrawCuboid_QNAME, DrawCuboid.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DrawItem }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ProjectMalmo.microsoft.com", name = "DrawItem", substitutionHeadNamespace = "http://ProjectMalmo.microsoft.com", substitutionHeadName = "DrawObjectType")
    public JAXBElement<DrawItem> createDrawItem(DrawItem value) {
        return new JAXBElement<DrawItem>(_DrawItem_QNAME, DrawItem.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DrawBlock }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ProjectMalmo.microsoft.com", name = "DrawBlock", substitutionHeadNamespace = "http://ProjectMalmo.microsoft.com", substitutionHeadName = "DrawObjectType")
    public JAXBElement<DrawBlock> createDrawBlock(DrawBlock value) {
        return new JAXBElement<DrawBlock>(_DrawBlock_QNAME, DrawBlock.class, null, value);
    }

}
